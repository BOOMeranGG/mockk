buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${rootProject.dokka_version}"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin-platform-jvm'
apply plugin: 'org.jetbrains.dokka'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testImplementation("org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version") {
        exclude group: "junit", module: "junit"
    }

    testImplementation 'org.slf4j:slf4j-api:1.7.26'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'

    compileOnly "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testImplementation "org.junit.vintage:junit-vintage-engine:$junit_vintage_version"
}

afterEvaluate {
    dokkaJavadoc {
        outputDirectory = new File("$buildDir/javadoc")
    }

    task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
        archiveClassifier.set('javadoc')
        from "$buildDir/javadoc"
    }
}
