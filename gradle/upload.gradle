apply plugin: 'maven-publish'

afterEvaluate {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                if (components.findByName("kotlin") != null) {
                    from components["kotlin"]
                    artifact tasks['sourcesJar']
                    try {
                        artifact tasks['javadocJar']
                    } catch (UnknownTaskException ignored) {
                    }
                } else if (components.findByName("release") != null) {
                    from components["release"]
                    artifact tasks.register("androidSourcesJar", Jar.class) {
                            archiveClassifier.set("sources")
                            from android.sourceSets.main.java.srcDirs
                        }
                    try {
                        artifact tasks['javadocJar']
                    } catch (UnknownTaskException ignored) {
                    }
                } else {
                    throw new RuntimeException("missing components to publish")
                }

                pom {
                    name = mavenName
                    description = mavenDescription
                    url = 'https://mockk.io'

                    scm {
                        connection = 'scm:git:git@github.com:mockk/mockk.git'
                        developerConnection = 'scm:git:git@github.com:mockk/mockk.git'
                        url = 'https://github.com/mockk/mockk/'
                    }

                    developers {
                        developer {
                            id = 'oleksiyp'
                            name = 'Oleksii Pylypenko'
                            email = 'oleksiy.pylypenko@gmail.com'
                        }
                        developer {
                            id = 'Raibaz'
                            name = 'Mattia Tommasone'
                            email = 'raibaz@gmail.com'
                        }
                    }

                    licenses {
                        license {
                            name = 'Apache License, Version 2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0'
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                if (project.hasProperty('localrepo')) {
                    url = rootProject.properties['localrepo']
                } else if (version.endsWith('SNAPSHOT')) {
                    url = "https://oss.sonatype.org/content/repositories/snapshots/"
                    credentials {
                        username = rootProject.properties['ossrhUsername'] ?: ''
                        password = rootProject.properties['ossrhPassword'] ?: ''
                    }
                } else {
                    url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                    credentials {
                        username = rootProject.properties['ossrhUsername'] ?: ''
                        password = rootProject.properties['ossrhPassword'] ?: ''
                    }
                }
            }
        }
    }

    if (!project.hasProperty('localrepo')) {
        if (!project.hasProperty('signing.keyId')) {
            throw new RuntimeException('missing signing.keyId to sign archives')
        }
        apply plugin: 'signing'
        signing {
            sign publishing.publications.mavenJava
        }
    }
}
